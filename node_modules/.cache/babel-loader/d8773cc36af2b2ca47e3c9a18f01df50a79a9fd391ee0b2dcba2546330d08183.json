{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vShow as _vShow, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Новая запись\", -1 /* HOISTED */);\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Новый комментарий\", -1 /* HOISTED */);\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"empty\"\n};\nconst _hoisted_9 = {\n  key: 1\n};\nexport function render(_ctx, _cache) {\n  const _component_RegistrationView = _resolveComponent(\"RegistrationView\");\n  return _ctx.userName ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.newPost = $event),\n    placeholder: \"Введите текст\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newPost]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.sendPost && _ctx.sendPost(...args))\n  }, \"Опублтковать\")]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.posts, post => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: post.id\n    }, [_createElementVNode(\"section\", null, [_createTextVNode(_toDisplayString(post.user) + \": \" + _toDisplayString(post.text) + \" \", 1 /* TEXT */), _createElementVNode(\"div\", null, [_createTextVNode(\" Лайков: \" + _toDisplayString(post.likes) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.like(post.id)\n    }, \"+\", 8 /* PROPS */, _hoisted_3), _createTextVNode(\" Дизлайков: \" + _toDisplayString(post.dislikes) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.dislike(post.id)\n    }, \"-\", 8 /* PROPS */, _hoisted_4)]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      onClick: $event => _ctx.showCom(post.id)\n    }, \"Комментарии\", 8 /* PROPS */, _hoisted_5), _withDirectives(_createElementVNode(\"div\", null, [_createElementVNode(\"div\", null, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.newComment = $event),\n      placeholder: \"Введите текст\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newComment]]), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.sendComment(post.id)\n    }, \"Опублтковать\", 8 /* PROPS */, _hoisted_7)])], 512 /* NEED_PATCH */), [[_vShow, post.showComments]])])])]);\n  }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"div\", _hoisted_8, \" Постов нет \", 512 /* NEED_PATCH */), [[_vShow, _ctx.emptyPost]])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createVNode(_component_RegistrationView)]));\n}","map":{"version":3,"names":["_createElementVNode","class","_ctx","userName","_createElementBlock","_hoisted_1","_hoisted_2","newPost","$event","placeholder","onClick","_cache","args","sendPost","_Fragment","_renderList","posts","post","key","id","user","_toDisplayString","text","likes","like","_hoisted_3","dislikes","dislike","_hoisted_4","showCom","_hoisted_5","_hoisted_6","newComment","sendComment","_hoisted_7","showComments","_hoisted_8","emptyPost","_hoisted_9","_createVNode","_component_RegistrationView"],"sources":["D:\\code\\react\\synergy\\final-project\\front\\src\\components\\HomeView.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"userName\">\r\n        <div>\r\n            <label>Новая запись</label>\r\n            <input v-model=\"newPost\" placeholder=\"Введите текст\"/>\r\n            <button @click=\"sendPost\">Опублтковать</button>\r\n        </div>\r\n        <div v-for=\"post in posts\" :key=\"post.id\">\r\n            <section>\r\n                {{ post.user }}: {{ post.text }}\r\n                <div>\r\n                    Лайков: {{ post.likes }}\r\n                    <button @click=\"like(post.id)\">+</button>\r\n                    Дизлайков: {{ post.dislikes }}\r\n                    <button @click=\"dislike(post.id)\">-</button>\r\n                </div>\r\n                <div>\r\n                    <button @click=\"showCom(post.id)\">Комментарии</button>\r\n                    <div v-show=\"post.showComments\">\r\n                        <div>\r\n                            <label>Новый комментарий</label>\r\n                            <input v-model=\"newComment\" placeholder=\"Введите текст\"/>\r\n                            <button @click=\"sendComment(post.id)\">Опублтковать</button>\r\n                         </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n        <div v-show=\"emptyPost\" class=\"empty\">\r\n            Постов нет\r\n        </div>\r\n    </div>\r\n    <div v-else>\r\n        <RegistrationView/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport RegistrationView from './RegistrationView.vue';\r\n\r\nexport default {\r\n    name: 'HomeView',\r\n    data() {\r\n        return {\r\n            newPost: '',\r\n            userName: this.userName = localStorage.getItem('userName'),\r\n            posts: [],\r\n            emptyPost: true,\r\n            newComment: '',\r\n            comments: []\r\n        }\r\n    },\r\n    methods: {\r\n        sendPost() {\r\n            this.posts.unshift({id: new Date().getTime(), user: this.userName, text: this.newPost, likes: 0, dislikes: 0, showComments: false, comments: this.comments})\r\n            localStorage.setItem('posts', JSON.stringify(this.posts))\r\n            this.newPost = ''\r\n            this.emptyPost = false\r\n        },\r\n        like(id) {\r\n            this.posts.map((post) => {\r\n                if(post.id === id){\r\n                    post.likes += 1\r\n                    localStorage.setItem('posts', JSON.stringify(this.posts))\r\n                }\r\n            });\r\n        },\r\n        dislike(id) {\r\n            this.posts.map((post) => {\r\n                if(post.id === id){\r\n                    post.dislikes += 1\r\n                    localStorage.setItem('posts', JSON.stringify(this.posts))\r\n                }\r\n            });\r\n        },\r\n        showCom(id) {\r\n            this.posts.map((post) => {\r\n                if(post.id === id){\r\n                    post.showComments = !post.showComments\r\n                    localStorage.setItem('posts', JSON.stringify(this.posts))\r\n                }\r\n            })\r\n        },\r\n        sendComment(id)\r\n    },\r\n    components: {\r\n        RegistrationView,\r\n    }, \r\n    created() {\r\n        if(localStorage.getItem('posts')){\r\n            this.posts = JSON.parse(localStorage.getItem('posts'))\r\n            this.emptyPost = false\r\n        } else {\r\n            this.emptyPost = true\r\n        }\r\n        // this.posts = this.posts.reverse()\r\n    },\r\n    // computed() {\r\n    //     this.posts = this.posts.reverse()\r\n    // }\r\n}\r\n</script>"],"mappings":";;;;gCAGYA,mBAAA,CAA2B,eAApB,cAAY;;;;gCAiBHA,mBAAA,CAAgC,eAAzB,mBAAiB;;;EAQpBC,KAAK,EAAC;AAAO;;;;;;SA3B9BC,IAAA,CAAAC,QAAQ,I,cAAnBC,mBAAA,CA8BM,OAAAC,UAAA,GA7BFL,mBAAA,CAIM,cAHFM,UAA2B,E,gBAC3BN,mBAAA,CAAsD;+DAAtCE,IAAA,CAAAK,OAAO,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAArBP,IAAA,CAAAK,OAAO,E,GACvBP,mBAAA,CAA+C;IAAtCU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEV,IAAA,CAAAW,QAAA,IAAAX,IAAA,CAAAW,QAAA,IAAAD,IAAA,CAAQ;KAAE,cAAY,E,sBAE1CR,mBAAA,CAoBMU,SAAA,QAAAC,WAAA,CApBcb,IAAA,CAAAc,KAAK,EAAbC,IAAI;yBAAhBb,mBAAA,CAoBM;MApBsBc,GAAG,EAAED,IAAI,CAACE;QAClCnB,mBAAA,CAkBU,kB,kCAjBHiB,IAAI,CAACG,IAAI,IAAG,IAAE,GAAAC,gBAAA,CAAGJ,IAAI,CAACK,IAAI,IAAG,GAChC,iBAAAtB,mBAAA,CAKM,c,iBALD,WACO,GAAAqB,gBAAA,CAAGJ,IAAI,CAACM,KAAK,IAAG,GACxB,iBAAAvB,mBAAA,CAAyC;MAAhCU,OAAK,EAAAF,MAAA,IAAEN,IAAA,CAAAsB,IAAI,CAACP,IAAI,CAACE,EAAE;OAAG,GAAC,iBAAAM,UAAA,G,iBAAS,cAC9B,GAAAJ,gBAAA,CAAGJ,IAAI,CAACS,QAAQ,IAAG,GAC9B,iBAAA1B,mBAAA,CAA4C;MAAnCU,OAAK,EAAAF,MAAA,IAAEN,IAAA,CAAAyB,OAAO,CAACV,IAAI,CAACE,EAAE;OAAG,GAAC,iBAAAS,UAAA,E,GAEvC5B,mBAAA,CASM,cARFA,mBAAA,CAAsD;MAA7CU,OAAK,EAAAF,MAAA,IAAEN,IAAA,CAAA2B,OAAO,CAACZ,IAAI,CAACE,EAAE;OAAG,aAAW,iBAAAW,UAAA,G,gBAC7C9B,mBAAA,CAMM,cALFA,mBAAA,CAIO,cAHH+B,UAAgC,E,gBAChC/B,mBAAA,CAAyD;iEAAzCE,IAAA,CAAA8B,UAAU,GAAAxB,MAAA;MAAEC,WAAW,EAAC;mDAAxBP,IAAA,CAAA8B,UAAU,E,GAC1BhC,mBAAA,CAA2D;MAAlDU,OAAK,EAAAF,MAAA,IAAEN,IAAA,CAAA+B,WAAW,CAAChB,IAAI,CAACE,EAAE;OAAG,cAAY,iBAAAe,UAAA,E,qCAJ7CjB,IAAI,CAACkB,YAAY,E;kDAU1CnC,mBAAA,CAEM,OAFNoC,UAEM,EAFgC,cAEtC,0B,SAFalC,IAAA,CAAAmC,SAAS,E,sBAI1BjC,mBAAA,CAEM,OAAAkC,UAAA,GADFC,YAAA,CAAmBC,2BAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}