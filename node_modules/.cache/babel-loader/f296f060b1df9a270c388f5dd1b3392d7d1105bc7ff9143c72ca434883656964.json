{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vShow as _vShow, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b6e8eb58\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  class: \"new-post\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Новая запись\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"post\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Новый комментарий\", -1 /* HOISTED */));\nconst _hoisted_9 = [\"onKeyup\"];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  class: \"empty\"\n};\nconst _hoisted_12 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_RegistrationView = _resolveComponent(\"RegistrationView\");\n  return $data.userName ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPost = $event),\n    placeholder: \"Введите текст\",\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.sendPost && $options.sendPost(...args), [\"enter\"]))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.newPost]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.sendPost && $options.sendPost(...args))\n  }, \"Опубликовать\")]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, post => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: post.id\n    }, [_createElementVNode(\"section\", _hoisted_4, [_createElementVNode(\"span\", null, _toDisplayString(post.user) + \": \" + _toDisplayString(post.text), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createCommentVNode(\" Лайков: {{ post.usersLiked.length }} \"), _createElementVNode(\"button\", {\n      onClick: $event => $options.like(post.id),\n      class: \"btn btn-3 btn-sep icon-heart\"\n    }, \"Лайков: \" + _toDisplayString(post.usersLiked.length), 9 /* TEXT, PROPS */, _hoisted_5), _createTextVNode(\" Дизлайков: \" + _toDisplayString(post.usersDisliked.length) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.dislike(post.id)\n    }, \"-\", 8 /* PROPS */, _hoisted_6)]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.showCom(post.id)\n    }, \"Комментарии\", 8 /* PROPS */, _hoisted_7), _withDirectives(_createElementVNode(\"div\", null, [_createElementVNode(\"div\", null, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.newComment = $event),\n      placeholder: \"Введите текст\",\n      onKeyup: _withKeys($event => $options.sendComment(post.id), [\"enter\"])\n    }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_9), [[_vModelText, $data.newComment]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.sendComment(post.id)\n    }, \"Опубликовать\", 8 /* PROPS */, _hoisted_10)]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(post.comments, comment => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: comment.user\n      }, _toDisplayString(comment.user) + \": \" + _toDisplayString(comment.text), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vShow, post.showComments]])])])]);\n  }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"div\", _hoisted_11, \" Постов нет \", 512 /* NEED_PATCH */), [[_vShow, $data.emptyPost]])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createVNode(_component_RegistrationView)]));\n}","map":{"version":3,"names":["class","_createElementVNode","$data","userName","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","newPost","$event","placeholder","onKeyup","_cache","_withKeys","args","$options","sendPost","onClick","_Fragment","_renderList","posts","post","key","id","_hoisted_4","_toDisplayString","user","text","_createCommentVNode","like","usersLiked","length","_hoisted_5","usersDisliked","dislike","_hoisted_6","showCom","_hoisted_7","_hoisted_8","newComment","sendComment","_hoisted_10","comments","comment","showComments","_hoisted_11","emptyPost","_hoisted_12","_createVNode","_component_RegistrationView"],"sources":["D:\\code\\react\\synergy\\final-project\\front\\src\\components\\HomeView.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"userName\">\r\n        <div class=\"new-post\">\r\n            <label>Новая запись</label>\r\n            <input v-model=\"newPost\" placeholder=\"Введите текст\" v-on:keyup.enter=\"sendPost\"/>\r\n            <button @click=\"sendPost\">Опубликовать</button>\r\n        </div>\r\n        <div v-for=\"post in posts\" :key=\"post.id\">\r\n            <section class=\"post\">\r\n                <span>{{ post.user }}: {{ post.text }}</span>\r\n                <div>\r\n                    <!-- Лайков: {{ post.usersLiked.length }} -->\r\n                    <button @click=\"like(post.id)\" class=\"btn btn-3 btn-sep icon-heart\">Лайков: {{ post.usersLiked.length }}</button>\r\n                    Дизлайков: {{ post.usersDisliked.length }}\r\n                    <button @click=\"dislike(post.id)\">-</button>\r\n                </div>\r\n                <div>\r\n                    <button @click=\"showCom(post.id)\">Комментарии</button>\r\n                    <div v-show=\"post.showComments\">\r\n                        <div>\r\n                            <label>Новый комментарий</label>\r\n                            <input v-model=\"newComment\" placeholder=\"Введите текст\" v-on:keyup.enter=\"sendComment(post.id)\"/>\r\n                            <button @click=\"sendComment(post.id)\">Опубликовать</button>\r\n                         </div>\r\n                         <div v-for=\"comment in post.comments\" :key=\"comment.user\">\r\n                            {{ comment.user }}: {{ comment.text }}\r\n                         </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n        <div v-show=\"emptyPost\" class=\"empty\">\r\n            Постов нет\r\n        </div>\r\n    </div>\r\n    <div v-else>\r\n        <RegistrationView/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport RegistrationView from './RegistrationView.vue';\r\n\r\nexport default {\r\n    name: 'HomeView',\r\n    data() {\r\n        return {\r\n            newPost: '',\r\n            userName: this.userName = localStorage.getItem('userName'),\r\n            posts: [],\r\n            emptyPost: true,\r\n            newComment: '',\r\n            // comments: []\r\n        }\r\n    },\r\n    methods: {\r\n        sendPost() {\r\n            if (this.newPost) {\r\n                this.posts.unshift({id: new Date().getTime(), user: this.userName, text: this.newPost, showComments: false, comments: [], usersLiked: [], usersDisliked: []})\r\n                localStorage.setItem('posts', JSON.stringify(this.posts))\r\n                this.newPost = ''\r\n                this.emptyPost = false\r\n            } else {\r\n                alert('Вы не ввели текст')\r\n            }\r\n        },\r\n        like(id) {\r\n            this.posts.map((post) => {\r\n                if(post.id === id){\r\n                    if(post.usersLiked.includes(this.userName)) {\r\n                        // console.log('del');\r\n                        post.usersLiked = post.usersLiked.filter((user) => user != this.userName)\r\n                    } else {\r\n                        // console.log('add')\r\n                        post.usersLiked.push(this.userName)\r\n                        post.usersDisliked = post.usersDisliked.filter((user) => user != this.userName)\r\n                    }\r\n                    // post.usersLiked.map((user) => {\r\n                    //     console.log(user);\r\n                    //     if(user === this.userName) {\r\n                    //         post.likes -= 1\r\n                    //         delete post.usersLiked(this.userName)\r\n                    //     } else {\r\n                    //         post.likes += 1\r\n                    //         post.usersLiked.push(this.userName)\r\n                    //     }\r\n                    // })\r\n                    // post.likes += 1\r\n                    // post.usersLiked.push(this.userName)\r\n                    // if(this.userName in post.usersLiked) {\r\n                    //     delete post.usersLiked(this.userName)\r\n                    //     console.log('del');\r\n                    // } else {\r\n                    //     post.usersLiked.push(this.userName)\r\n                    //     console.log('add');\r\n                    // }\r\n                    // if(!post.usersLiked){\r\n                    //     post.usersLiked.push(this.userName)\r\n                    //     console.log('add');\r\n                    // } else {\r\n                    //     for (let user of post.usersLiked) {\r\n                    //         console.log('for');\r\n                    //         if(user === this.userName){\r\n                    //             delete post.usersLiked(this.userName)\r\n                    //             console.log('del');\r\n                    //         } else {\r\n                    //             post.usersLiked.push(this.userName)\r\n                    //             console.log('add');\r\n                    //         }\r\n                    //     }\r\n                    // }\r\n                    localStorage.setItem('posts', JSON.stringify(this.posts))\r\n                }\r\n            });\r\n        },\r\n        dislike(id) {\r\n            this.posts.map((post) => {\r\n                if(post.id === id){\r\n                    if(post.usersDisliked.includes(this.userName)) {\r\n                        // console.log('del');\r\n                        post.usersDisliked = post.usersDisliked.filter((user) => user != this.userName)\r\n                    } else {\r\n                        // console.log('add')\r\n                        post.usersDisliked.push(this.userName)\r\n                        post.usersLiked = post.usersLiked.filter((user) => user != this.userName)\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        showCom(id) {\r\n            this.posts.map((post) => {\r\n                if(post.id === id){\r\n                    post.showComments = !post.showComments\r\n                    localStorage.setItem('posts', JSON.stringify(this.posts))\r\n                } else {\r\n                    post.showComments = false\r\n                }\r\n            })\r\n        },\r\n        sendComment(id){\r\n            if(this.newComment !== '') {\r\n                this.posts.map((post) => {\r\n                    if(post.id === id){\r\n                        post.comments.unshift({user: this.userName, text: this.newComment})\r\n                        localStorage.setItem('posts', JSON.stringify(this.posts))\r\n                    }\r\n                })\r\n                this.newComment = ''\r\n            } else {\r\n                alert('Введите текст комментария')\r\n            }\r\n        }\r\n    },\r\n    components: {\r\n        RegistrationView,\r\n    }, \r\n    created() {\r\n        if(localStorage.getItem('posts')){\r\n            this.posts = JSON.parse(localStorage.getItem('posts'))\r\n            this.emptyPost = false\r\n        } else {\r\n            this.emptyPost = true\r\n        }\r\n        // this.posts = this.posts.reverse()\r\n    },\r\n    // computed() {\r\n    //     this.posts = this.posts.reverse()\r\n    // }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.post {\r\n    width: 100%;\r\n    background-color: #A1F0E5;\r\n    margin-bottom: 20px;\r\n    border-radius: 10px;\r\n}\r\n.post > span {\r\n    font-size: 20px;\r\n}\r\n.new-post {\r\n    margin-bottom: 15px;\r\n}\r\n.btn {\r\n  border: none;\r\n  font-family: 'Lato';\r\n  font-size: inherit;\r\n  color: inherit;\r\n  background: none;\r\n  cursor: pointer;\r\n  padding: 25px 80px;\r\n  display: inline-block;\r\n  margin: 15px 30px;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: 700;\r\n  outline: none;\r\n  position: relative;\r\n  -webkit-transition: all 0.3s;\r\n  -moz-transition: all 0.3s;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.btn:after {\r\n  content: '';\r\n  position: absolute;\r\n  z-index: -1;\r\n  -webkit-transition: all 0.3s;\r\n  -moz-transition: all 0.3s;\r\n  transition: all 0.3s;\r\n}\r\n\r\n/* Pseudo elements for icons */\r\n.btn:before {\r\n  font-family: 'FontAwesome';\r\n  speak: none;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-variant: normal;\r\n  text-transform: none;\r\n  line-height: 1;\r\n  position: relative;\r\n  -webkit-font-smoothing: antialiased;\r\n}\r\n\r\n\r\n/* Icon separator */\r\n.btn-sep {\r\n  padding: 25px 60px 25px 120px;\r\n}\r\n\r\n.btn-sep:before {\r\n  background: rgba(0,0,0,0.15);\r\n}\r\n\r\n/* Button 1 */\r\n.btn-1 {\r\n  background: #3498db;\r\n  color: #fff;\r\n}\r\n\r\n.btn-1:hover {\r\n  background: #2980b9;\r\n}\r\n\r\n.btn-1:active {\r\n  background: #2980b9;\r\n  top: 2px;\r\n}\r\n\r\n.btn-1:before {\r\n  position: absolute;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  line-height: 3;\r\n  font-size: 140%;\r\n  width: 60px;\r\n}\r\n\r\n/* Button 2 */\r\n.btn-2 {\r\n  background: #2ecc71;\r\n  color: #fff;\r\n}\r\n\r\n.btn-2:hover {\r\n  background: #27ae60;\r\n}\r\n\r\n.btn-2:active {\r\n  background: #27ae60;\r\n  top: 2px;\r\n}\r\n\r\n.btn-2:before {\r\n  position: absolute;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  line-height: 3;\r\n  font-size: 140%;\r\n  width: 60px;\r\n}\r\n\r\n/* Button 3 */\r\n.btn-3 {\r\n  background: #e74c3c;\r\n  color: #fff;\r\n}\r\n\r\n.btn-3:hover {\r\n  background: #c0392b;\r\n}\r\n\r\n.btn-3:active {\r\n  background: #c0392b;\r\n  top: 2px;\r\n}\r\n\r\n.btn-3:before {\r\n  position: absolute;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  line-height: 3;\r\n  font-size: 140%;\r\n  width: 60px;\r\n}\r\n\r\n/* Button 3 */\r\n.btn-4 {\r\n  background: #34495e;\r\n  color: #fff;\r\n}\r\n\r\n.btn-4:hover {\r\n  background: #2c3e50;\r\n}\r\n\r\n.btn-4:active {\r\n  background: #2c3e50;\r\n  top: 2px;\r\n}\r\n\r\n.btn-4:before {\r\n  position: absolute;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  line-height: 3;\r\n  font-size: 140%;\r\n  width: 60px;\r\n}\r\n\r\n/* Icons */\r\n\r\n.icon-cart:before {\r\n  content: \"\\f07a\";\r\n}\r\n\r\n.icon-heart:before {\r\n  content: \"\\f55a\";\r\n}\r\n\r\n.icon-info:before {\r\n  content: \"\\f05a\";\r\n}\r\n\r\n.icon-send:before {\r\n  content: \"\\f1d8\";\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}