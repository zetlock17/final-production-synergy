{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport RegistrationView from './RegistrationView.vue';\nexport default {\n  name: 'ChatView',\n  data() {\n    return {\n      msgs: [],\n      newMsg: '',\n      emptyMsg: true,\n      userName: this.userName = localStorage.getItem('userName')\n    };\n  },\n  components: {\n    RegistrationView\n  },\n  methods: {\n    sendMsg() {\n      if (this.newMsg !== '') {\n        this.emptyMsg = false;\n        this.msgs.push({\n          id: new Date().getTime(),\n          user: this.userName,\n          text: this.newMsg\n        });\n        this.saveChatRecords();\n        this.newMsg = '';\n      } else {\n        alert('Введите сообщение');\n      }\n    },\n    saveChatRecords() {\n      const records = this.msgs;\n      localStorage.setItem(`msgs_${this.userName}`, JSON.stringify(records));\n    },\n    delMsgs() {\n      this.msgs = [];\n      localStorage.removeItem(`msgs_${this.userName}`);\n      this.emptyMsg = true;\n    }\n  },\n  created() {\n    if (localStorage.getItem(`msgs_${this.userName}`)) {\n      this.msgs = JSON.parse(localStorage.getItem(`msgs_${this.userName}`));\n      this.emptyMsg = false;\n    } else {\n      this.emptyMsg = true;\n    }\n    // if(this.msgs) {\n    //     this.emptyMsg = false\n    // } \n    // else {\n    //     this.emptyMsg = true\n    // }\n  }\n};","map":{"version":3,"names":["RegistrationView","name","data","msgs","newMsg","emptyMsg","userName","localStorage","getItem","components","methods","sendMsg","push","id","Date","getTime","user","text","saveChatRecords","alert","records","setItem","JSON","stringify","delMsgs","removeItem","created","parse"],"sources":["D:\\code\\react\\synergy\\final-project\\front\\src\\components\\ChatView.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"userName\" class=\"chat\">\r\n        <div class=\"chat\">\r\n            <h2>Чат</h2>\r\n            <div class=\"text\" v-for=\"msg in msgs\" :key=\"msg.id\">\r\n                {{ msg.user }}: {{ msg.text }}\r\n            </div>\r\n            <div v-show=\"emptyMsg\" class=\"empty\">\r\n                Сообщений нет\r\n            </div>\r\n        </div>\r\n        <input v-model=\"newMsg\" placeholder=\"Введите сообщение\" v-on:keyup.enter=\"sendMsg\"/>\r\n        <button @click=\"sendMsg\">Отправить</button>\r\n        <button @click=\"delMsgs\">Удалить</button>\r\n    </div>\r\n    <div v-else>\r\n        <RegistrationView/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import RegistrationView from './RegistrationView.vue';\r\n\r\n    export default {\r\n        name: 'ChatView',\r\n        data (){\r\n            return {\r\n                msgs: [],\r\n                newMsg: '',\r\n                emptyMsg: true,\r\n                userName: this.userName = localStorage.getItem('userName')\r\n            }\r\n        },\r\n        components: {\r\n            RegistrationView,\r\n        }, \r\n        methods: {\r\n            sendMsg() {\r\n                if(this.newMsg !== '') {\r\n                    this.emptyMsg = false\r\n                    this.msgs.push({id: new Date().getTime(), user: this.userName, text: this.newMsg})\r\n                    this.saveChatRecords()\r\n                    this.newMsg = ''\r\n                } \r\n                else {\r\n                    alert('Введите сообщение')\r\n                }\r\n            },\r\n            saveChatRecords(){\r\n                const records = this.msgs\r\n                localStorage.setItem(`msgs_${this.userName}`, JSON.stringify(records))\r\n            },\r\n            delMsgs(){\r\n                this.msgs = []\r\n                localStorage.removeItem(`msgs_${this.userName}`)\r\n                this.emptyMsg = true\r\n            }\r\n        },\r\n        created() {\r\n            if(localStorage.getItem(`msgs_${this.userName}`)) {\r\n                this.msgs = JSON.parse(localStorage.getItem(`msgs_${this.userName}`))\r\n                this.emptyMsg = false\r\n            }\r\n            else {\r\n                this.emptyMsg = true\r\n            }\r\n            // if(this.msgs) {\r\n            //     this.emptyMsg = false\r\n            // } \r\n            // else {\r\n            //     this.emptyMsg = true\r\n            // }\r\n        }\r\n\r\n    }\r\n    \r\n</script>\r\n\r\n<style scoped>\r\n.text {\r\n    background-color: #A1F0E5;\r\n    border-radius: 10px;\r\n    padding: 5px;\r\n    margin-bottom: 10px;\r\n}\r\n</style>"],"mappings":";AAqBI,OAAOA,gBAAe,MAAO,wBAAwB;AAErD,eAAe;EACXC,IAAI,EAAE,UAAU;EAChBC,IAAGA,CAAA,EAAI;IACH,OAAO;MACHC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,IAAI,CAACA,QAAO,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU;IAC7D;EACJ,CAAC;EACDC,UAAU,EAAE;IACRT;EACJ,CAAC;EACDU,OAAO,EAAE;IACLC,OAAOA,CAAA,EAAG;MACN,IAAG,IAAI,CAACP,MAAK,KAAM,EAAE,EAAE;QACnB,IAAI,CAACC,QAAO,GAAI,KAAI;QACpB,IAAI,CAACF,IAAI,CAACS,IAAI,CAAC;UAACC,EAAE,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;UAAEC,IAAI,EAAE,IAAI,CAACV,QAAQ;UAAEW,IAAI,EAAE,IAAI,CAACb;QAAM,CAAC;QACjF,IAAI,CAACc,eAAe,CAAC;QACrB,IAAI,CAACd,MAAK,GAAI,EAAC;MACnB,OACK;QACDe,KAAK,CAAC,mBAAmB;MAC7B;IACJ,CAAC;IACDD,eAAeA,CAAA,EAAE;MACb,MAAME,OAAM,GAAI,IAAI,CAACjB,IAAG;MACxBI,YAAY,CAACc,OAAO,CAAE,QAAO,IAAI,CAACf,QAAS,EAAC,EAAEgB,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC;IACzE,CAAC;IACDI,OAAOA,CAAA,EAAE;MACL,IAAI,CAACrB,IAAG,GAAI,EAAC;MACbI,YAAY,CAACkB,UAAU,CAAE,QAAO,IAAI,CAACnB,QAAS,EAAC;MAC/C,IAAI,CAACD,QAAO,GAAI,IAAG;IACvB;EACJ,CAAC;EACDqB,OAAOA,CAAA,EAAG;IACN,IAAGnB,YAAY,CAACC,OAAO,CAAE,QAAO,IAAI,CAACF,QAAS,EAAC,CAAC,EAAE;MAC9C,IAAI,CAACH,IAAG,GAAImB,IAAI,CAACK,KAAK,CAACpB,YAAY,CAACC,OAAO,CAAE,QAAO,IAAI,CAACF,QAAS,EAAC,CAAC;MACpE,IAAI,CAACD,QAAO,GAAI,KAAI;IACxB,OACK;MACD,IAAI,CAACA,QAAO,GAAI,IAAG;IACvB;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}