{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport RegistrationView from './RegistrationView.vue';\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      newPost: '',\n      userName: this.userName = localStorage.getItem('userName'),\n      posts: [],\n      emptyPost: true,\n      newComment: ''\n    };\n  },\n  methods: {\n    sendPost() {\n      this.posts.unshift({\n        id: new Date().getTime(),\n        user: this.userName,\n        text: this.newPost,\n        likes: 0,\n        dislikes: 0,\n        showComments: false\n      });\n      localStorage.setItem('posts', JSON.stringify(this.posts));\n      this.newPost = '';\n      this.emptyPost = false;\n    },\n    like(id) {\n      this.posts.map(post => {\n        if (post.id === id) {\n          post.likes += 1;\n          localStorage.setItem('posts', JSON.stringify(this.posts));\n        }\n      });\n    },\n    dislike(id) {\n      this.posts.map(post => {\n        if (post.id === id) {\n          post.dislikes += 1;\n          localStorage.setItem('posts', JSON.stringify(this.posts));\n        }\n      });\n    },\n    comments(id) {\n      this.posts.map(post => {\n        if (post.id === id) {\n          post.showComments = !post.showComments;\n          localStorage.setItem('posts', JSON.stringify(this.posts));\n        }\n      });\n    }\n  },\n  components: {\n    RegistrationView\n  },\n  created() {\n    if (localStorage.getItem('posts')) {\n      this.posts = JSON.parse(localStorage.getItem('posts'));\n      this.emptyPost = false;\n    } else {\n      this.emptyPost = true;\n    }\n    // this.posts = this.posts.reverse()\n  }\n  // computed() {\n  //     this.posts = this.posts.reverse()\n  // }\n};","map":{"version":3,"names":["RegistrationView","name","data","newPost","userName","localStorage","getItem","posts","emptyPost","newComment","methods","sendPost","unshift","id","Date","getTime","user","text","likes","dislikes","showComments","setItem","JSON","stringify","like","map","post","dislike","comments","components","created","parse"],"sources":["D:\\code\\react\\synergy\\final-project\\front\\src\\components\\HomeView.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"userName\">\r\n        <div>\r\n            <label>Новая запись</label>\r\n            <input v-model=\"newPost\" placeholder=\"Введите текст\"/>\r\n            <button @click=\"sendPost\">Опублтковать</button>\r\n        </div>\r\n        <div v-for=\"post in posts\" :key=\"post.id\">\r\n            <section>\r\n                {{ post.user }}: {{ post.text }}\r\n                <div>\r\n                    Лайков: {{ post.likes }}\r\n                    <button @click=\"like(post.id)\">+</button>\r\n                    Дизлайков: {{ post.dislikes }}\r\n                    <button @click=\"dislike(post.id)\">-</button>\r\n                </div>\r\n                <div>\r\n                    <button @click=\"comments(post.id)\">Комментарии</button>\r\n                    <div v-show=\"post.showComments\">\r\n                        <div>\r\n                            <label>Новый комментарий</label>\r\n                            <input v-model=\"newComment\" placeholder=\"Введите текст\"/>\r\n                            <button @click=\"sendComment\">Опублтковать</button>\r\n                         </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n        <div v-show=\"emptyPost\" class=\"empty\">\r\n            Постов нет\r\n        </div>\r\n    </div>\r\n    <div v-else>\r\n        <RegistrationView/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport RegistrationView from './RegistrationView.vue';\r\n\r\nexport default {\r\n    name: 'HomeView',\r\n    data() {\r\n        return {\r\n            newPost: '',\r\n            userName: this.userName = localStorage.getItem('userName'),\r\n            posts: [],\r\n            emptyPost: true,\r\n            newComment: ''\r\n        }\r\n    },\r\n    methods: {\r\n        sendPost() {\r\n            this.posts.unshift({id: new Date().getTime(), user: this.userName, text: this.newPost, likes: 0, dislikes: 0, showComments: false})\r\n            localStorage.setItem('posts', JSON.stringify(this.posts))\r\n            this.newPost = ''\r\n            this.emptyPost = false\r\n        },\r\n        like(id) {\r\n            this.posts.map((post) => {\r\n                if(post.id === id){\r\n                    post.likes += 1\r\n                    localStorage.setItem('posts', JSON.stringify(this.posts))\r\n                }\r\n            });\r\n        },\r\n        dislike(id) {\r\n            this.posts.map((post) => {\r\n                if(post.id === id){\r\n                    post.dislikes += 1\r\n                    localStorage.setItem('posts', JSON.stringify(this.posts))\r\n                }\r\n            });\r\n        },\r\n        comments(id) {\r\n            this.posts.map((post) => {\r\n                if(post.id === id){\r\n                    post.showComments = !post.showComments\r\n                    localStorage.setItem('posts', JSON.stringify(this.posts))\r\n                }\r\n            })\r\n        }\r\n    },\r\n    components: {\r\n        RegistrationView,\r\n    }, \r\n    created() {\r\n        if(localStorage.getItem('posts')){\r\n            this.posts = JSON.parse(localStorage.getItem('posts'))\r\n            this.emptyPost = false\r\n        } else {\r\n            this.emptyPost = true\r\n        }\r\n        // this.posts = this.posts.reverse()\r\n    },\r\n    // computed() {\r\n    //     this.posts = this.posts.reverse()\r\n    // }\r\n}\r\n</script>"],"mappings":";AAsCA,OAAOA,gBAAe,MAAO,wBAAwB;AAErD,eAAe;EACXC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,IAAI,CAACA,QAAO,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAC1DC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,QAAQA,CAAA,EAAG;MACP,IAAI,CAACJ,KAAK,CAACK,OAAO,CAAC;QAACC,EAAE,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;QAAEC,IAAI,EAAE,IAAI,CAACZ,QAAQ;QAAEa,IAAI,EAAE,IAAI,CAACd,OAAO;QAAEe,KAAK,EAAE,CAAC;QAAEC,QAAQ,EAAE,CAAC;QAAEC,YAAY,EAAE;MAAK,CAAC;MAClIf,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAChB,KAAK,CAAC;MACxD,IAAI,CAACJ,OAAM,GAAI,EAAC;MAChB,IAAI,CAACK,SAAQ,GAAI,KAAI;IACzB,CAAC;IACDgB,IAAIA,CAACX,EAAE,EAAE;MACL,IAAI,CAACN,KAAK,CAACkB,GAAG,CAAEC,IAAI,IAAK;QACrB,IAAGA,IAAI,CAACb,EAAC,KAAMA,EAAE,EAAC;UACda,IAAI,CAACR,KAAI,IAAK;UACdb,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAChB,KAAK,CAAC;QAC5D;MACJ,CAAC,CAAC;IACN,CAAC;IACDoB,OAAOA,CAACd,EAAE,EAAE;MACR,IAAI,CAACN,KAAK,CAACkB,GAAG,CAAEC,IAAI,IAAK;QACrB,IAAGA,IAAI,CAACb,EAAC,KAAMA,EAAE,EAAC;UACda,IAAI,CAACP,QAAO,IAAK;UACjBd,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAChB,KAAK,CAAC;QAC5D;MACJ,CAAC,CAAC;IACN,CAAC;IACDqB,QAAQA,CAACf,EAAE,EAAE;MACT,IAAI,CAACN,KAAK,CAACkB,GAAG,CAAEC,IAAI,IAAK;QACrB,IAAGA,IAAI,CAACb,EAAC,KAAMA,EAAE,EAAC;UACda,IAAI,CAACN,YAAW,GAAI,CAACM,IAAI,CAACN,YAAW;UACrCf,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAChB,KAAK,CAAC;QAC5D;MACJ,CAAC;IACL;EACJ,CAAC;EACDsB,UAAU,EAAE;IACR7B;EACJ,CAAC;EACD8B,OAAOA,CAAA,EAAG;IACN,IAAGzB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAC;MAC7B,IAAI,CAACC,KAAI,GAAIe,IAAI,CAACS,KAAK,CAAC1B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACrD,IAAI,CAACE,SAAQ,GAAI,KAAI;IACzB,OAAO;MACH,IAAI,CAACA,SAAQ,GAAI,IAAG;IACxB;IACA;EACJ;EACA;EACA;EACA;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}